/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FoodMart;

import com.jfoenix.controls.JFXButton;
import com.jfoenix.controls.JFXTextField;
import com.jfoenix.validation.IntegerValidator;
import dao.CustomerSession;
import dao.OrderDetail;
import dao.OrderDetailDAO;
import dao.Product;
import dao.ProductDAO;
import de.jensd.fx.glyphs.fontawesome.FontAwesomeIcon;
import de.jensd.fx.glyphs.fontawesome.FontAwesomeIconView;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.geometry.Pos;
import javafx.scene.control.Label;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Paint;

/**
 *
 * @author Admin
 */
public class CartController {

    ProductDAO productDao = new ProductDAO();

    OrderDetailDAO orderDetailDao = new OrderDetailDAO();

    private ObservableList<OrderDetail> cart;

    @FXML
    private GridPane gpCartItems;

    @FXML
    void goToHome(ActionEvent event) throws IOException {
        Navigator.getInstance().gotoHome();
    }

    @FXML
    void goToMyAccount(ActionEvent event) throws IOException {
        Navigator.getInstance().gotoMyAccount();
    }

    @FXML
    void gotoCart(ActionEvent event) throws IOException, SQLException {
        Navigator.getInstance().gotoCart();
    }

    @FXML
    void logout(ActionEvent event) throws IOException {
        CustomerSession.getInstance().clearCustomerSession();
        Navigator.getInstance().gotoLogin();
    }

    @FXML
    void shop(ActionEvent event) throws IOException {
        Navigator.getInstance().gotoHome();
    }

    @FXML
    void checkout(ActionEvent event) throws IOException, SQLException {
        Navigator.getInstance().gotoCheckout();
    }

    private Double getTotalPrice() {
        Double t = 0.0;
        for (OrderDetail item : cart) {
            t += item.getSubTotal();
        }
        return t;
    }

    private void loadCart() {
        gpCartItems.getChildren().removeIf(node -> GridPane.getRowIndex(node) != null && GridPane.getRowIndex(node) != 0);
        Double totalPrice = 0.0;
        int row = 1;
        DecimalFormat df = new DecimalFormat("#,###");
        for (int i = 0; i < cart.size(); i++) {
            OrderDetail item = cart.get(i);
            Product product = productDao.select(item.getProductId());
            HBox col_1 = new HBox();
            ImageView iv = new ImageView(product.getImage());
            iv.setFitWidth(150);
            iv.setFitHeight(150);
            iv.setPreserveRatio(true);
            iv.setSmooth(true);
            iv.setCache(true);
            Label name = new Label(product.getProductName());
            col_1.getChildren().addAll(iv, name);
            GridPane.setConstraints(col_1, 0, row);

            VBox col_2 = new VBox();
            Label stock = new Label("Stock: " + product.getStock());
            stock.setStyle("-fx-font-size: 13");
            HBox qty = new HBox();
            JFXTextField txtQty = new JFXTextField();
            txtQty.setPrefWidth(50);
            txtQty.setAlignment(Pos.CENTER);

            txtQty.setText(Integer.toString(item.getQuantity()));
            IntegerValidator integerValidator = new IntegerValidator();
            txtQty.getValidators().add(integerValidator);
            txtQty.textProperty().addListener((obs, oldVal, newVal) -> {
                if (!txtQty.validate() || newVal.equals("0")) {
                    txtQty.setText(oldVal);
                } else if (!newVal.equals("") && Integer.parseInt(newVal) > product.getStock()) {
                    txtQty.setText(oldVal);
                } else if (!newVal.equals("")) {
                    item.setQuantity(Integer.parseInt(newVal));
                    Label t = (Label) gpCartItems.lookup("#" + item.getProductId());
                    t.setText(df.format(item.getSubTotal()) + " VND");
                    Label s = (Label) gpCartItems.lookup("#total");
                    s.setText("Subtotal: " + df.format(getTotalPrice()) + " VND");
                }
            });
            JFXButton btnPlus = new JFXButton();
            btnPlus.getStyleClass().add("hover-hand");
            FontAwesomeIconView plus = new FontAwesomeIconView(FontAwesomeIcon.PLUS);
            FontAwesomeIconView minus = new FontAwesomeIconView(FontAwesomeIcon.MINUS);
            plus.setFill(Paint.valueOf("#6ac2ee"));
            plus.setMouseTransparent(true);
            btnPlus.setGraphic(plus);
            btnPlus.setOnMouseClicked(e -> {
                int count = item.getQuantity();
                count++;
                txtQty.setText(Integer.toString(count));
            });
            JFXButton btnMinus = new JFXButton();
            btnMinus.getStyleClass().add("hover-hand");
            minus.setFill(Paint.valueOf("#6ac2ee"));
            btnMinus.setGraphic(minus);
            btnMinus.setOnMouseClicked(c -> {
                int count = item.getQuantity();
                if (count != 1) {
                    count--;
                    txtQty.setText(Integer.toString(count));
                }
            });
            qty.getChildren().addAll(btnMinus, txtQty, btnPlus);
            col_2.getChildren().addAll(qty, stock);
            col_2.setSpacing(20);
            GridPane.setConstraints(col_2, 1, row);

            HBox col_3 = new HBox();
            Label price = new Label(df.format(item.getUnitPrice()) + " VND");
            col_3.getChildren().add(price);
            GridPane.setConstraints(col_3, 2, row);

            HBox col_4 = new HBox();
            Label total = new Label(df.format(item.getSubTotal()) + " VND");
            total.setId(Integer.toString(item.getProductId()));
            JFXButton del = new JFXButton(" ");
            FontAwesomeIconView x = new FontAwesomeIconView(FontAwesomeIcon.TIMES_CIRCLE);
            x.setFill(Paint.valueOf("#6ac2ee"));
            x.setSize("20");
            del.setGraphic(x);
            del.setOnAction(e -> {
                int rowIndex = GridPane.getRowIndex(del.getParent());
                gpCartItems.getChildren().removeIf(node -> GridPane.getRowIndex(node) != null && GridPane.getRowIndex(node) == rowIndex);
                cart.remove(item);
                Label s = (Label) gpCartItems.lookup("#total");
                s.setText("Subtotal: " + df.format(getTotalPrice()) + " VND");
            });
            col_4.getChildren().addAll(total, del);
            col_4.setSpacing(50);
            GridPane.setConstraints(col_4, 3, row);

            gpCartItems.getChildren().addAll(col_1, col_2, col_3, col_4);
            totalPrice += item.getSubTotal();
            row++;
        }
        HBox lastCell = new HBox();
        Label subtotal = new Label("Subtotal: " + df.format(totalPrice) + " VND");
        subtotal.setId("total");
        lastCell.getChildren().add(subtotal);
        lastCell.setPrefHeight(50);
        GridPane.setConstraints(lastCell, 3, row);
        gpCartItems.getChildren().add(lastCell);

        gpCartItems.getChildren().forEach(hbox -> {
            hbox.getStyleClass().add("cart-cell");
        });
    }

    public void initialize() throws SQLException {
        cart = CustomerSession.getInstance().getCart();
//      cart = orderDetailDao.selectAll();
        loadCart();
    }
}
